apiVersion: v1
kind: Secret
metadata: 
  name: postgre-secret
  namespace: dev
type: Opaque
data: 
  db_user: cG9zdGdyZXMK
  db_password: Y29tcGljYXRlZAo=


# aws eks describe-cluster --name gianglv6-eks-demo --region=ap-southeast-2 --query "cluster.identity.oidc.issuer" --output text

# aws eks update-kubeconfig --region ap-southeast-2 --name gianglv6-eks-demo

# eksctl utils associate-iam-oidc-provider --region=ap-southeast-2 --cluster=gianglv6-eks-demo --approve

# eksctl create iamserviceaccount \
#   --region ap-southeast-2 \
#   --name ebs-csi-controller-sa \
#   --namespace kube-system\
#   --cluster gianglv6-eks-demo \
#   --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy \
#   --approve \
#   --role-name AmazonEKS_EBS_CSI_DriverRole
#   --override-existing-serviceaccounts 


####delete the service account and detach, delete role => create new svcaccount match with the oidc (delete sa also delete the role)
# eksctl delete iamserviceaccount \
#   --region ap-southeast-2 \
#   --name ebs-csi-controller-sa \
#   --namespace kube-system \
#   --cluster gianglv6-eks-demo


# eksctl create addon --name aws-ebs-csi-driver --cluster gianglv6-eks-demo --service-account-role-arn arn:aws:iam::$(aws sts get-caller-identity --query Account --output text):role/AmazonEKS_EBS_CSI_DriverRole --force --region ap-southeast-2 

# helm install postgresql --set global.postgresql.auth.username=postgres,global.postgresql.auth.password=compicated,global.postgresql.auth.database=my_test_db,readReplicas.replicaCount=2,primary.persistence.enabled=true,primary.persistence.size=1Gi,global.storageClass=gp2 oci://registry-1.docker.io/bitnamicharts/postgresql -n dev

# helm upgrade --install postgresql --set global.postgresql.auth.username=postgres,global.postgresql.auth.password=compicated,global.postgresql.auth.database=my_test_db,readReplicas.replicaCount=2,primary.persistence.enabled=true,primary.persistence.size=1Gi,global.storageClass=gp2 oci://registry-1.docker.io/bitnamicharts/postgresql -n dev
# echo compicated | base64 ==>>> db_password

# kubectl port-forward svc/argocd-server -n argocd 8888:80
# kubectl port-forward svc/web-service -n dev 8888:80
# kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d && echo

# export PGMASTER=$(kubectl get pods -o jsonpath={.items..metadata.name} -l application=spilo,cluster-name=postgresql,spilo-role=master -n dev)



# helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
# helm repo update
# helm -n ingress-nginx install ingress-nginx ingress-nginx/ingress-nginx --create-namespace
# helm  install ingress-nginx ingress-nginx/ingress-nginx  -n ingress-nginx 

# git fetch origin
# git merge origin/main
# git push 
